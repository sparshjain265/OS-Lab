loadi(65, 7);	//load init program to memory 
loadi(66, 8);	

loadi(22, 35);	//load INT10 program to memory - exit
loadi(23, 36);

loadi(2, 15);	//load exception handler to memory
loadi(3, 16);

loadi(63, 13);	//Load Library Code from the disk
loadi(64, 14);

loadi(4, 17);	//Load the timer routine
loadi(5, 18);

loadi(16, 29);	//Load INT7 program to memory
loadi(17, 30);

//Managing Page Table
PTBR = PAGE_TABLE_BASE;	
PTLR = 10;

[PTBR + 0] = 63;		//Library
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";	
[PTBR + 4] = 78;		//Heap
[PTBR + 5] = "0110";
[PTBR + 6] = 79;
[PTBR + 7] = "0110";
[PTBR + 8] = 65;		//Program Code
[PTBR + 9] = "0100";
[PTBR + 10] = 66;
[PTBR + 11] = "0100";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";
[PTBR + 16] = 76;		//Stack
[PTBR + 17] = "0110";
[PTBR + 18] = 77;
[PTBR + 19] = "0110";

//Managing Process Table
[PROCESS_TABLE + 1] = 0;		//PID (process ID)
[PROCESS_TABLE + 11] = 80;		//User Area Page

//Managing System Status Table
[SYSTEM_STATUS_TABLE + 1] = 0;

//set stack for init
SP = 8 * 512;
[76*512] = [65*512 + 1];

//transfer control to user program
ireturn;