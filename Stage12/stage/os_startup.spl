loadi(65, 7);	//load init program to memory 
loadi(66, 8);

loadi(69,11);	//load the idle program to memory
loadi(70,12);

loadi(22, 35);	//load INT10 program to memory - exit
loadi(23, 36);

loadi(2, 15);	//load exception handler to memory
loadi(3, 16);

loadi(63, 13);	//Load Library Code from the disk
loadi(64, 14);

loadi(4, 17);	//Load the timer routine
loadi(5, 18);

loadi(16, 29);	//Load INT7 program to memory - write to consol
loadi(17, 30);

//Managing Page Table for idle process
PTBR = PAGE_TABLE_BASE;
PTLR = 10;
[PTBR + 0] = -1;		//Library
[PTBR + 1] = "0000";
[PTBR + 2] = -1;
[PTBR + 3] = "0000";	
[PTBR + 4] = -1;		//Heap
[PTBR + 5] = "0000";
[PTBR + 6] = -1;
[PTBR + 7] = "0000";
[PTBR + 8] = 69;		//Program Code
[PTBR + 9] = "0100";
[PTBR + 10] = 70;
[PTBR + 11] = "0100";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";
[PTBR + 16] = 81;		//Stack
[PTBR + 17] = "0110";
[PTBR + 18] = -1;
[PTBR + 19] = "0000";

//Managing Page Table for init process
PTBR = PAGE_TABLE_BASE + 20;	
PTLR = 10;
[PTBR + 0] = 63;		//Library
[PTBR + 1] = "0100";
[PTBR + 2] = 64;
[PTBR + 3] = "0100";	
[PTBR + 4] = 78;		//Heap
[PTBR + 5] = "0110";
[PTBR + 6] = 79;
[PTBR + 7] = "0110";
[PTBR + 8] = 65;		//Program Code
[PTBR + 9] = "0100";
[PTBR + 10] = 66;
[PTBR + 11] = "0100";
[PTBR + 12] = -1;
[PTBR + 13] = "0000";
[PTBR + 14] = -1;
[PTBR + 15] = "0000";
[PTBR + 16] = 76;		//Stack
[PTBR + 17] = "0110";
[PTBR + 18] = 77;
[PTBR + 19] = "0110";



//Managing Process Table

//idle
[PROCESS_TABLE + 0 + 1] = 0;						//PID 
[PROCESS_TABLE + 0 + 4] = CREATED;				//State
[PROCESS_TABLE + 0 + 11] = 82;					//User Area Page
[PROCESS_TABLE + 0 + 12] = 0;						//KPTR Kernal Stack Pointer 
[PROCESS_TABLE + 0 + 13] = 8*512;				//UPTR User Stack Pointer
[PROCESS_TABLE + 0 + 14] = PAGE_TABLE_BASE;	//PTBR
[PROCESS_TABLE + 0 + 15] = 10;					//PTLR
[81 * 512] = [69*512 + 1];							//Entry Point

//init
[PROCESS_TABLE + 16 + 1] = 1;								//PID 
[PROCESS_TABLE + 16 + 4] = RUNNING;						//State
[PROCESS_TABLE + 16 + 11] = 80;							//User Area Page
[PROCESS_TABLE + 16 + 12] = 0;							//KPTR
[PROCESS_TABLE + 16 + 13] = 8*512;						//UPTR
[PROCESS_TABLE + 16 + 14] = PAGE_TABLE_BASE + 20;	//PTBR
[PROCESS_TABLE + 16 + 15] = 10;							//PTLR
[76*512] = [65*512 + 1];									//Entry Point


//Initialize for scheduling init process
PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;
SP = 8*512;

//Managing System Status Table
[SYSTEM_STATUS_TABLE + 1] = 1;

//transfer control to user program
ireturn;