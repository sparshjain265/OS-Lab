alias functionNum R1;
alias argument R2;

//Get Free Page
if(functionNum == 1) then
	//increment wait mem count
	[SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] + 1;

	//while memory is full
	while([SYSTEM_STATUS_TABLE + 2] 	== 0) do
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 4] = WAIT_MEM;
		multipush(R1, R2);
		call MOD_5;
		multipop(R1, R2);
	endwhile;

	//Decrement wait mem count and free mem count
	[SYSTEM_STATUS_TABLE + 3] = [SYSTEM_STATUS_TABLE + 3] - 1;
	[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;

	//Get a free Page
	alias i R0;
	i = 76;
	while(i < 128) do
		if([MEMORY_FREE_LIST + i] == 0) then
			[MEMORY_FREE_LIST + i] = 1;
			break;
		endif; 
		i = i + 1;
	endwhile;

	return;
endif;

//Release Page
if(functionNum == 2) then
	//Decrement entry in MEMORY_FREE_LIST
	[MEMORY_FREE_LIST + argument] = [MEMORY_FREE_LIST + argument] - 1;
	
	//If page is free, update free mem count
	if([MEMORY_FREE_LIST + argument] == 0) then
		[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] + 1;
	endif;

	//Ready all the processes waiting for free mem page
	alias i R3;
	i = 0;
	while(i < 16) do
		if([PROCESS_TABLE + i*16 + 4] == WAIT_MEM) then
			[PROCESS_TABLE + i*16 + 4] = READY;
		endif;
		i = i + 1;
	endwhile;

	return;
endif;